{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","removeTodo","className","style","textDecoration","isDone","descr","Button","variant","onClick","FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","getMessage","setGetMessage","todos","setTodos","newTodos","splice","axios","post","id","then","response","console","log","data","message","catch","error","useEffect","get","result","json","JSON","parse","src","logo","alt","status","length","alert","map","Card","Body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d14927e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ba115182.png\";","import logo from './logo.png';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Todo({ todo,index, removeTodo }) {\n  return (\n    <div\n      className=\"todo\">\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.descr}</span>\n      <div>\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>âœ•</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add Todo</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\" />\n    </Form.Group>\n    <Button variant=\"primary mb-3\" type=\"submit\">\n      Submit\n    </Button>\n    <br></br>\n  </Form>\n  );\n}\n\nfunction App() {\n  const [getMessage, setGetMessage] = useState({})\n  const [todos, setTodos,] = React.useState([{}]);\n  const addTodo = descr => {\n    const newTodos = [...todos, { descr }];\n    setTodos(newTodos);\n    axios.post('http://localhost:5000/postTodo', {\n      todo: descr,\n      type: 'todo'\n    })\n    .then(function (response) {\n      alert(response.data.todo);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  };\n\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n    axios.post('http://localhost:5000/deleteTodo', {\n      id: index,\n    })\n    .then(function (response) {\n      // alert(response.data.message);\n      console.log(response.data.message)\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(()=>{\n    axios.get('http://localhost:5000/hello').then(response => {\n      setGetMessage(response)\n    }).catch(error => {\n      console.log(error)\n    });\n    axios.get('http://localhost:5000/getList').then(response => {\n      return response.data.todos\n    }).then( result =>{\n      const json = JSON.parse(result)\n      setTodos(json)\n      console.log(json)\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>{getMessage.status === 200 ? \n          <h3>{getMessage.data.message}</h3>\n          :\n          <h3>LOADING</h3>}\n        </div>\n        <div>{todos.length !== null ? \n           <div className=\"container\">\n           <FormTodo addTodo={addTodo} />\n           <div>\n             {todos.map((todo,index) => (\n               <Card>\n                 <Card.Body>\n                   <Todo\n                   key={index}\n                   index={index}\n                   todo={todo}\n                   removeTodo={removeTodo}\n                   />\n                 </Card.Body>\n               </Card>\n             ))}\n           </div>\n         </div>\n          :\n          <h3>LOADING</h3>}</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}